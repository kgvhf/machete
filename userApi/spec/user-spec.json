{
  "openapi": "3.0.1",
  "info": {
    "description": "user",
    "title": "OpenAPI user",
    "version": "v1"
  },
  "servers": [
    {
      "url": "http://localhost:8080/api/v1/",
      "description": "local server"
    }
  ],
  "paths": {
    "/users/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "operationId": "get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "user не найден"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "operationId": "update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "user не найден"
          },
          "400" : {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "operationId": "getList",
        "responses": {
          "404": {
            "description": "user не найден"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400" : {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserUpdateRequest": {
        "type": "object",
        "properties": {
          "passportNumber": {
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "age": {
            "maximum": 200,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "gender": {
            "pattern": "^[F|M]$",
            "type": "string"
          },
          "comment": {
            "type": "string"
          }
        }
      },
      "UserRequest": {
        "required": [
          "age",
          "gender",
          "name",
          "passportNumber"
        ],
        "type": "object",
        "properties": {
          "passportNumber": {
            "pattern": "^\\d{10}$",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "age": {
            "maximum": 200,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "gender": {
            "pattern": "^[F|M]$",
            "type": "string"
          },
          "comment": {
            "type": "string"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "passportNumber": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "gender": {
            "type": "string",
            "enum": [
              "M",
              "F"
            ]
          },
          "comment": {
            "type": "string"
          }
        }
      }
    }
  }
}